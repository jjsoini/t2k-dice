/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React from "react";
import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

import glb from "./d4.glb";

type GLTFResult = GLTF & {
  nodes: {
    d4: THREE.Mesh;
  };
  materials: {};
};

export const D4 = React.forwardRef<THREE.Group, JSX.IntrinsicElements["group"]>(
  ({ children, ...props }, ref) => {
    const { nodes } = useGLTF(glb) as unknown as GLTFResult;
    return (
      <group ref={ref} {...props} scale={0.1} dispose={null}>
        <group name="dice">
          <mesh name="d4" castShadow receiveShadow geometry={nodes.d4.geometry}>
            {children}
            <group
              name="004_locator_1"
              position={[0, -0.61, -1.27]}
              rotation={[-1.92, 0, 0]}
            />
            <group
              name="004_locator_2"
              position={[-1.1, -0.61, 0.63]}
              rotation={[-1.39, -0.3, 2.12]}
            />
            <group
              name="004_locator_3"
              position={[1.1, -0.61, 0.63]}
              rotation={[-1.39, 0.3, -2.12]}
            />
            <group name="004_locator_4" position={[0, 1.18, 0]} />
          </mesh>
        </group>
      </group>
    );
  }
);

useGLTF.preload(glb);
